{"version":3,"sources":["components/RecordForm.js","components/FlowCard.js","components/Incomes.js","components/Expenses.js","components/Assets.js","components/Transactions.js","components/Chart.js","components/getChartData.js","components/App.js","index.js"],"names":["RecordForm","props","event","preventDefault","fromRendered","this","fromValues","map","ele","part1","_","startCase","type","name","value","toRendered","toValues","onSubmit","onFormSubmit","className","for","placeholder","amount","onChange","amountOnChange","from","fromOnChange","to","toOnChange","onClick","onRecord","changeRecordMode","recordMode","renderForm","React","Component","FlowCard","state","currentTime","Date","num","toString","replace","cardType","formatNumber","roc","balance","meanGrowth","toFixed","effectiveDate","startDate","strROC","strBalance","renderButtons","Incomes","incomeCardsRendered","getMonth","getFullYear","data","element","Expenses","expenseCardsRendered","Assets","assetCardsRendered","term","termUnit","Transactions","transactionsRender","e","description","Chart","createChart","bind","node","svg","select","xValue","d","month","margin","innerWidth","innerHeight","xScale","scaleTime","domain","extent","range","nice","yScale","scaleLinear","lineGenerator1","line","x","y","mean","meanValue","curve","curveBasis","lineGenerator2","best","bestValue","lineGenerator3","worst","worstValue","g","append","attr","xAxis","axisBottom","tickSize","tickPadding","yAxis","axisLeft","yAxisG","call","selectAll","remove","text","xAxisG","getChartDataToState","ref","width","height","addDays","date","days","result","setDate","getDate","monthDiff","d1","d2","months","projectAsset","card","year","startMonth","diffMonths","indexMonth","meanFactor","bestFactor","worstFactor","n","defaultProbability","Math","pow","sqrt","log1p","i","period","setMonth","getChartData","a","axios","get","cards","docs","results","chartData","length","j","push","App","setState","console","log","income","target","post","farm","updateTime","incomeCards","expenseCards","assetCards","transactions","getCards","interval","setInterval","clearInterval","concat","style","overflow","maxHeight","size","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1f7c0af.chunk.js","sourcesContent":["import React from 'react';\r\nimport _ from 'lodash';\r\n// import './RecordForm.css';\r\n\r\nclass RecordForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onFormSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  renderForm() {\r\n    const fromRendered = this.props.fromValues.map(ele => {\r\n      const part1 = `${_.startCase(ele.type)} - ${ele.name}`;\r\n      const name = !ele.type ? ele.name : part1;\r\n\r\n      return <option value={name}>{name}</option>;\r\n    });\r\n\r\n    const toRendered = this.props.toValues.map(ele => {\r\n      const part1 = `${_.startCase(ele.type)} - ${ele.name}`;\r\n      const name = !ele.type ? ele.name : part1;\r\n\r\n      return <option value={name}>{name}</option>;\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          {/* <div className=\"three fields\"> */}\r\n          <div className=\"field\">\r\n            <label>Amount</label>\r\n            <div className=\"ui right labeled input\">\r\n              <label for=\"amount\" className=\"ui label\">\r\n                VND\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Amount\"\r\n                value={this.props.amount}\r\n                onChange={event => this.props.amountOnChange(event)}\r\n              />\r\n              <div className=\"ui basic label\">000</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>From</label>\r\n            <select\r\n              className=\"ui dropdown\"\r\n              value={this.props.from}\r\n              onChange={event => this.props.fromOnChange(event)}\r\n            >\r\n              <option value=\"\"></option>\r\n              {fromRendered}\r\n            </select>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>To</label>\r\n            <select\r\n              className=\"ui fluid dropdown\"\r\n              value={this.props.to}\r\n              onChange={event => this.props.toOnChange(event)}\r\n            >\r\n              <option value=\"\"></option>\r\n              {toRendered}\r\n            </select>\r\n          </div>\r\n        </form>\r\n        <button className=\"ui primary button\" onClick={this.props.onRecord}>\r\n          Record\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui raised segment\">\r\n        <button onClick={this.props.changeRecordMode} className=\"ui button\">\r\n          Record Mode\r\n        </button>\r\n        {/* style={{ position: 'fixed' }} */}\r\n\r\n        {this.props.recordMode === true ? this.renderForm() : ''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecordForm;\r\n","import React from 'react';\r\n\r\nclass FlowCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = { currentTime: new Date() };\r\n\r\n  formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n  }\r\n\r\n  strROC() {\r\n    {\r\n      /* // rateofChange/grownth monthly +*/\r\n    }\r\n    if (this.props.cardType === 'Income') {\r\n      return `+${this.formatNumber(this.props.roc)} VND/month`;\r\n    }\r\n\r\n    if (this.props.cardType === 'Expense') {\r\n      return `-sum VND/month`;\r\n    }\r\n\r\n    if (this.props.cardType === 'Asset') {\r\n      return `+${this.formatNumber(\r\n        ((this.props.balance * this.props.meanGrowth) / 12).toFixed(0)\r\n      )} VND/month`;\r\n    }\r\n  }\r\n\r\n  strBalance() {\r\n    if (this.props.cardType === 'Income') {\r\n      return (\r\n        <div>\r\n          {`${this.formatNumber(\r\n            (\r\n              (this.props.roc / 30 / 84600000) *\r\n              (new Date() - this.props.effectiveDate)\r\n            ).toFixed(0)\r\n          )} VND`}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.props.cardType === 'Expense') {\r\n      return <div>{`MTD sum VND`}</div>;\r\n    }\r\n\r\n    if (this.props.cardType === 'Asset') {\r\n      return (\r\n        <div>\r\n          {`${this.formatNumber(this.props.balance)} + \r\n            ${this.formatNumber(\r\n              (\r\n                ((this.props.balance * this.props.meanGrowth) /\r\n                  365 /\r\n                  86400 /\r\n                  1000) *\r\n                (new Date() - this.props.startDate)\r\n              ).toFixed(0)\r\n            )} VND`}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderButtons() {\r\n    if (this.props.cardType === 'Income') {\r\n      return (\r\n        <div\r\n          className=\"extra content\"\r\n          onClick={() => this.props.fromOnChange(this.props.name)}\r\n        >\r\n          <div className=\"ui two buttons\">\r\n            <div className=\"ui basic green button\">From</div>\r\n            <div className=\"ui basic button\"></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.props.cardType === 'Expense') {\r\n      return (\r\n        <div\r\n          className=\"extra content\"\r\n          onClick={() => this.props.toOnChange(this.props.name)}\r\n        >\r\n          <div className=\"ui two buttons\">\r\n            <div className=\"ui basic button\"></div>\r\n            <div className=\"ui basic red button\">To</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.props.cardType === 'Asset') {\r\n      return (\r\n        <div className=\"extra content\">\r\n          <div className=\"ui two buttons\">\r\n            <div\r\n              className=\"ui basic red button\"\r\n              onClick={() => this.props.fromOnChange(this.props.name)}\r\n            >\r\n              From\r\n            </div>\r\n            <div\r\n              className=\"ui basic green button\"\r\n              onClick={() => this.props.toOnChange(this.props.name)}\r\n            >\r\n              To\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"content\">\r\n          <div className=\"header\">{this.props.name}</div>\r\n          <div className=\"meta\">{this.strROC()}</div>\r\n          <div className=\"description\">{this.strBalance()}</div>\r\n        </div>\r\n        {this.props.recordMode === true ? this.renderButtons() : ''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlowCard;\r\n","import React from 'react';\r\nimport FlowCard from './FlowCard';\r\n\r\nclass Incomes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const currentMonth = new Date().getMonth();\r\n    const currentYear = new Date().getFullYear();\r\n    const incomeCardsRendered = this.props.data.map(element => {\r\n      return (\r\n        <FlowCard\r\n          cardType=\"Income\"\r\n          name={element.name}\r\n          roc={element.roc}\r\n          effectiveDate={new Date(element.effectiveDate)}\r\n          recordMode={this.props.recordMode}\r\n          fromOnChange={this.props.fromOnChange}\r\n          toOnChange={this.props.toOnChange}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <h2>Income</h2>\r\n        <div className=\"ui one cards\">{incomeCardsRendered}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Incomes;\r\n","import React from 'react';\r\nimport FlowCard from './FlowCard';\r\n\r\nclass Expenses extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const expenseCardsRendered = this.props.data.map(element => {\r\n      return (\r\n        <FlowCard\r\n          cardType=\"Expense\"\r\n          name={element.name}\r\n          effectiveDate={new Date(element.effectiveDate)}\r\n          recordMode={this.props.recordMode}\r\n          fromOnChange={this.props.fromOnChange}\r\n          toOnChange={this.props.toOnChange}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <h2>Expense</h2>\r\n        <div className=\"ui two cards\">{expenseCardsRendered}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Expenses;\r\n","import React from 'react';\r\nimport FlowCard from './FlowCard';\r\nimport _ from 'lodash';\r\n\r\nclass Assets extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const assetCardsRendered = this.props.data.map(element => {\r\n      return (\r\n        <FlowCard\r\n          cardType=\"Asset\"\r\n          name={`${_.startCase(element.type)} - ${element.name}`}\r\n          balance={element.balance}\r\n          meanGrowth={element.meanGrowth}\r\n          startDate={element.effectiveDate}\r\n          term={element.term}\r\n          termUnit={element.termUnit}\r\n          recordMode={this.props.recordMode}\r\n          fromOnChange={this.props.fromOnChange}\r\n          toOnChange={this.props.toOnChange}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <h2>Assets</h2>\r\n        <div className=\"ui two cards\">{assetCardsRendered}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Assets;\r\n","import React from 'react';\r\n\r\nclass Transactions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const transactionsRender = this.props.data.map(e => {\r\n      return (\r\n        <div className=\"ui row\">\r\n          <div className=\"ui column\">{e.description}</div>\r\n          <div className=\"ui column\">{e.from}</div>\r\n          <div className=\"ui column\">{e.to}</div>\r\n          <div className=\"ui column\">{e.amount}</div>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <h3>Transactions</h3>\r\n        <div className=\"ui stackable four column vertically divided grid container\">\r\n          <div className=\"ui row\">\r\n            <div className=\"ui column\">Description</div>\r\n            <div className=\"ui column\">From</div>\r\n            <div className=\"ui column\">To</div>\r\n            <div className=\"ui column\">Amount</div>\r\n          </div>\r\n          {transactionsRender}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transactions;\r\n","import React from 'react';\r\n// import { scaleLinear, scaleTime } from 'd3-scale';\r\n// import { max } from 'd3-array';\r\n// import { select } from 'd3-selection';\r\nimport {\r\n  select,\r\n  scaleLinear,\r\n  scaleTime,\r\n  extent,\r\n  axisLeft,\r\n  axisBottom,\r\n  line,\r\n  curveBasis\r\n} from 'd3';\r\nimport axios from 'axios';\r\n\r\nclass Chart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.createChart = this.createChart.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.createChart(this.props.data);\r\n  }\r\n  componentDidUpdate() {\r\n    this.createChart(this.props.data);\r\n  }\r\n\r\n  createChart(data) {\r\n    const node = this.node;\r\n    const svg = select(node);\r\n    const xValue = d => d.month;\r\n    const yValue = d => d.best;\r\n    const meanValue = d => d.mean;\r\n    const bestValue = d => d.best;\r\n    const worstValue = d => d.worst;\r\n\r\n    const margin = { top: 50, right: 50, bottom: 80, left: 100 };\r\n    const innerWidth = 900 - margin.left - margin.right;\r\n    const innerHeight = 600 - margin.top - margin.bottom;\r\n    const xAxisLabel = 'Month';\r\n    const yAxisLabel = '';\r\n\r\n    const xScale = scaleTime()\r\n      .domain(extent(data, xValue))\r\n      .range([0, innerWidth])\r\n      .nice();\r\n\r\n    const yScale = scaleLinear()\r\n      .domain([100000000, 600000000])\r\n      .range([innerHeight, 0])\r\n      .nice();\r\n\r\n    const lineGenerator1 = line()\r\n      .x(d => xScale(xValue(d)))\r\n      .y(d => yScale(meanValue(d)))\r\n      .curve(curveBasis);\r\n    const lineGenerator2 = line()\r\n      .x(d => xScale(xValue(d)))\r\n      .y(d => yScale(bestValue(d)))\r\n      .curve(curveBasis);\r\n    const lineGenerator3 = line()\r\n      .x(d => xScale(xValue(d)))\r\n      .y(d => yScale(worstValue(d)))\r\n      .curve(curveBasis);\r\n\r\n    const g = svg\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    const xAxis = axisBottom(xScale)\r\n      .tickSize(-innerHeight)\r\n      .tickPadding(15);\r\n\r\n    const yAxis = axisLeft(yScale)\r\n      .tickSize(-innerWidth)\r\n      .tickPadding(10);\r\n\r\n    const yAxisG = g.append('g').call(yAxis);\r\n    yAxisG.selectAll('.domain').remove();\r\n\r\n    yAxisG\r\n      .append('text')\r\n      .attr('class', 'axis-label')\r\n      .attr('y', -60)\r\n      .attr('x', -innerHeight / 2)\r\n      .attr('fill', 'black')\r\n      .attr('transform', `rotate(-90)`)\r\n      .attr('text-anchor', 'middle')\r\n      .text(yAxisLabel);\r\n\r\n    const xAxisG = g\r\n      .append('g')\r\n      .call(xAxis)\r\n      .attr('transform', `translate(0,${innerHeight})`);\r\n\r\n    xAxisG.select('.domain').remove();\r\n\r\n    xAxisG\r\n      .append('text')\r\n      .attr('class', 'axis-label')\r\n      .attr('y', 80)\r\n      .attr('x', innerWidth / 2)\r\n      .attr('fill', 'black')\r\n      .text(xAxisLabel);\r\n\r\n    g.append('path')\r\n      .attr('class', 'line-path')\r\n      .attr('d', lineGenerator1(data))\r\n      .attr(\r\n        'style',\r\n        'fill:none;stroke:maroon;stroke-width:3;stroke-linejoin:round'\r\n      );\r\n\r\n    g.append('path')\r\n      .attr('class', 'line-path')\r\n      .attr('d', lineGenerator2(data))\r\n      .attr(\r\n        'style',\r\n        'fill:none;stroke:maroon;stroke-width:0.5;stroke-linejoin:round'\r\n      );\r\n\r\n    g.append('path')\r\n      .attr('class', 'line-path')\r\n      .attr('d', lineGenerator3(data))\r\n      .attr(\r\n        'style',\r\n        'fill:none;stroke:maroon;stroke-width:0.5;stroke-linejoin:round'\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 onClick={this.props.getChartDataToState}>Chart test</h2>\r\n        <svg ref={node => (this.node = node)} width={900} height={600}></svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","import axios from 'axios';\r\n\r\nconst addDays = (date, days) => {\r\n  let result = new Date(date);\r\n  result.setDate(result.getDate() + days);\r\n  return result;\r\n};\r\n\r\nconst monthDiff = (d1, d2) => {\r\n  let months;\r\n  months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n  months -= d1.getMonth() + 1;\r\n  months += d2.getMonth();\r\n  return months <= 0 ? 0 : months;\r\n};\r\n\r\nconst projectAsset = (card, year) => {\r\n  let result = [];\r\n  let startMonth = 1;\r\n  let diffMonths = 0;\r\n  let indexMonth = 1;\r\n  let meanFactor = 1;\r\n  let bestFactor = 1;\r\n  let worstFactor = 1;\r\n\r\n  if ((card.type === 'saving') | (card.type === 'bond investment')) {\r\n    startMonth = new Date(addDays(new Date(card.effectiveDate), 16).setDate(1));\r\n    diffMonths = monthDiff(startMonth, new Date()) + 1;\r\n    indexMonth = startMonth;\r\n    meanFactor = n => {\r\n      return (\r\n        (1 - card.defaultProbability) * Math.pow(1 + card.meanGrowth / 12, n)\r\n      );\r\n    };\r\n    bestFactor = n => {\r\n      return Math.pow(1 + card.meanGrowth / 12, n);\r\n    };\r\n    // p is expected value\r\n    // p(1-p) is variance, hence sqrt is standard deviation\r\n    worstFactor = n => {\r\n      return (\r\n        (1 -\r\n          card.defaultProbability -\r\n          2 *\r\n            Math.sqrt(\r\n              (1 - card.defaultProbability) * card.defaultProbability\r\n            )) *\r\n        Math.pow(1 + card.meanGrowth / 12, n)\r\n      );\r\n    };\r\n  } else if (card.type === 'cash') {\r\n    startMonth = new Date();\r\n    indexMonth = startMonth;\r\n    diffMonths = 0;\r\n    meanFactor = n => {\r\n      return 1;\r\n    };\r\n    bestFactor = n => {\r\n      return 1;\r\n    };\r\n    worstFactor = n => {\r\n      return 1;\r\n    };\r\n  } else if (card.type === 'stock investment') {\r\n    startMonth = new Date(addDays(new Date(card.effectiveDate), 16).setDate(1));\r\n    diffMonths = monthDiff(startMonth, new Date()) + 1;\r\n    indexMonth = startMonth;\r\n    meanFactor = n => {\r\n      return Math.pow(1 + 0.007686, n);\r\n    };\r\n    bestFactor = n => {\r\n      return meanFactor(n) + Math.log1p(n * 0.095588);\r\n    };\r\n    worstFactor = n => {\r\n      return meanFactor(n) - Math.log1p(n * 0.0423);\r\n    };\r\n  } else if (card.type === 'toy') {\r\n    startMonth = new Date(addDays(new Date(card.effectiveDate), 16).setDate(1));\r\n    diffMonths = monthDiff(startMonth, new Date()) + 1;\r\n    indexMonth = startMonth;\r\n    meanFactor = n => {\r\n      return Math.pow(0.975, n);\r\n    };\r\n    bestFactor = n => {\r\n      return Math.pow(0.98, n);\r\n    };\r\n    worstFactor = n => {\r\n      return Math.pow(0.97, n);\r\n    };\r\n  }\r\n\r\n  for (let i = 0; i < 12 * year; i++) {\r\n    result[i] = {\r\n      i,\r\n      period: i + diffMonths,\r\n      month: new Date(indexMonth.setMonth(indexMonth.getMonth() + 1)),\r\n      meanFactor: meanFactor(i + diffMonths),\r\n      bestFactor: bestFactor(i + diffMonths),\r\n      worstFactor: worstFactor(i + diffMonths),\r\n      mean: meanFactor(i + diffMonths) * card.balance,\r\n      best: bestFactor(i + diffMonths) * card.balance,\r\n      worst: worstFactor(i + diffMonths) * card.balance\r\n    };\r\n  }\r\n  //console.log(card.type, card.name, result);\r\n  return result;\r\n};\r\n\r\nconst getChartData = async () => {\r\n  const data = await axios.get('/api/v1/cards?card=asset');\r\n  const cards = data.data.data.docs;\r\n  const results = cards.map(card => projectAsset(card, 5));\r\n  let chartData = [];\r\n\r\n  for (let i = 0; i < results[0].length; i++) {\r\n    //number of months\r\n    let mean = 0;\r\n    let best = 0;\r\n    let worst = 0;\r\n    for (let j = 0; j < results.length; j++) {\r\n      //number of assets\r\n\r\n      mean = mean + results[j][i].mean;\r\n      best = best + results[j][i].best;\r\n      worst = worst + results[j][i].worst;\r\n    }\r\n    chartData.push({\r\n      period: results[0][i].period,\r\n      month: results[0][i].month,\r\n      mean,\r\n      best,\r\n      worst\r\n    });\r\n    //console.log(i, mean, best, worst);\r\n  }\r\n  //console.log(chartData);\r\n  return chartData;\r\n};\r\n\r\nexport default getChartData;\r\n","import React from 'react';\r\nimport RecordForm from './RecordForm';\r\nimport Incomes from './Incomes';\r\nimport Expenses from './Expenses';\r\nimport Assets from './Assets';\r\nimport Transactions from './Transactions';\r\nimport Chart from './Chart';\r\nimport data from './data.json';\r\nimport axios from 'axios';\r\nimport getChartData from './getChartData';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      recordMode: false,\r\n      currentTime: new Date(),\r\n      amount: null,\r\n      from: '',\r\n      to: '',\r\n      chartData: [],\r\n      incomeCards: [],\r\n      expenseCards: [],\r\n      assetCards: [],\r\n      transactions: []\r\n    };\r\n\r\n    console.log(this.state);\r\n    this.getCards();\r\n  }\r\n\r\n  changeRecordMode = () => {\r\n    this.setState({ recordMode: !this.state.recordMode });\r\n    console.log(new Date(data[0].income[0].effectiveDate));\r\n  };\r\n  amountOnChange = event => {\r\n    this.setState({ amount: event.target.value });\r\n  };\r\n  fromOnChange = name => {\r\n    try {\r\n      this.setState({ from: name.target.value });\r\n    } catch {\r\n      this.setState({ from: name });\r\n    }\r\n  };\r\n  toOnChange = name => {\r\n    try {\r\n      this.setState({ to: name.target.value });\r\n    } catch {\r\n      this.setState({ to: name });\r\n    }\r\n  };\r\n\r\n  onRecord = () => {\r\n    axios.post('/api/v1/transactions', {\r\n      farm: '5de608e532c37a25186e3931',\r\n      from: this.state.from,\r\n      to: this.state.to,\r\n      amount: this.state.amount\r\n    });\r\n  };\r\n\r\n  getChartDataToState = async () => {\r\n    const chartData = await getChartData();\r\n    this.setState({ chartData });\r\n    console.log(this.state);\r\n  };\r\n  async getCards() {\r\n    const incomeCards = await axios.get('/api/v1/cards?card=income');\r\n    const expenseCards = await axios.get('/api/v1/cards?card=expense');\r\n    const assetCards = await axios.get('/api/v1/cards?card=asset');\r\n    const transactions = await axios.get('/api/v1/transactions');\r\n\r\n    this.setState({\r\n      incomeCards: incomeCards.data.data.docs,\r\n      expenseCards: expenseCards.data.data.docs,\r\n      assetCards: assetCards.data.data.docs,\r\n      transactions: transactions.data.data.docs\r\n    });\r\n    // console.log(this.state);\r\n  }\r\n\r\n  //making running roc numbers\r\n  updateTime = () => {\r\n    this.setState({ currentTime: new Date() });\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.updateTime, 200);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  //--------------------------------\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <h1>Asset Farm</h1>\r\n        <div className=\"ui two column stackable grid\">\r\n          <div className=\"column\">\r\n            <RecordForm\r\n              recordMode={this.state.recordMode}\r\n              changeRecordMode={this.changeRecordMode}\r\n              amount={this.state.amount}\r\n              from={this.state.from}\r\n              to={this.state.to}\r\n              amountOnChange={this.amountOnChange}\r\n              fromOnChange={this.fromOnChange}\r\n              toOnChange={this.toOnChange}\r\n              onRecord={this.onRecord}\r\n              fromValues={this.state.incomeCards.concat(this.state.assetCards)}\r\n              toValues={this.state.expenseCards.concat(this.state.assetCards)}\r\n            />\r\n          </div>\r\n          <div className=\"column\">\r\n            <div\r\n              className=\"ui stacked segment\"\r\n              style={{ overflow: 'auto', maxHeight: 400 }}\r\n            >\r\n              <Transactions data={this.state.transactions} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"ui three column stackable grid\">\r\n          {/* style={{ paddingTop: '10em' }} */}\r\n          <div className=\"three wide column\">\r\n            <Incomes\r\n              data={this.state.incomeCards}\r\n              recordMode={this.state.recordMode}\r\n              fromOnChange={this.fromOnChange}\r\n              toOnChange={this.toOnChange}\r\n            />\r\n          </div>\r\n          <div className=\"six wide column\">\r\n            <Expenses\r\n              data={this.state.expenseCards}\r\n              recordMode={this.state.recordMode}\r\n              fromOnChange={this.fromOnChange}\r\n              toOnChange={this.toOnChange}\r\n            />\r\n          </div>\r\n          <div className=\"six wide column\">\r\n            <Assets\r\n              data={this.state.assetCards}\r\n              recordMode={this.state.recordMode}\r\n              fromOnChange={this.fromOnChange}\r\n              toOnChange={this.toOnChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Chart */}\r\n        <Chart\r\n          getChartDataToState={this.getChartDataToState}\r\n          data={this.state.chartData}\r\n          size={[500, 500]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}